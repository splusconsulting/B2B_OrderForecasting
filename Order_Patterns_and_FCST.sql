--------------------------------------
--             2017 Data            --
--------------------------------------

-- SELECT TOP 10 * FROM Integration.dbo.LineSalesV

DROP TABLE #SALESTEMP
SELECT * 
INTO #SALESTEMP
FROM Integration.dbo.OrderActsV
WHERE REGION = 'NA'

DROP TABLE #WEEKLYSALES2017
SELECT		B.CUSTNUMBER + A.SKU UNIQUEID
		,	B.CUSTNUMBER
		,	A.CUSTOMERNAME
		,	A.SKU 
		,	SUM(A.QTY) QTY
		,	DATEPART( WK, A.ORDERDATE) 'Week of the Year'
		,	CONVERT(VARCHAR(10), DATEADD(dd, 7-(DATEPART(dw, A.ORDERDATE)), A.ORDERDATE) ,111) 'WEEKENDING'
INTO #WEEKLYSALES2017
FROM Integration.dbo.LineSalesV A
JOIN #SALESTEMP B ON A.ORDERID = B.SALESID
WHERE A.REGION = 'NA'
AND A.ORDERDATE <= '2017-12-31'
GROUP BY A.SKU, A.CUSTOMERNAME, B.CUSTNUMBER, DATEPART( WK, A.ORDERDATE),
CONVERT(VARCHAR(10), DATEADD(dd, -(DATEPART(dw, A.ORDERDATE)-1), A.ORDERDATE) ,111),
CONVERT(VARCHAR(10), DATEADD(dd, 7-(DATEPART(dw, A.ORDERDATE)), A.ORDERDATE) ,111)
ORDER BY 5


DROP TABLE #ORDERCOUNT2017
SELECT DISTINCT UNIQUEID, COUNT (UNIQUEID) ORDERCOUNT INTO #ORDERCOUNT2017 FROM #WEEKLYSALES2017 GROUP BY UNIQUEID
-- SELECT * FROM #ORDERCOUNT

--------------------------------------------------------------------------------------------------------------------

DROP TABLE #ORDERPATTERNDATA2017
SELECT		A.*
		,	ROW_NUMBER () OVER (PARTITION BY A.CUSTNUMBER, A.SKU ORDER BY A.WEEKENDING ASC) ORDER_SEQ_ASC
		,	ROW_NUMBER () OVER (PARTITION BY A.CUSTNUMBER, A.SKU ORDER BY A.WEEKENDING DESC) ORDER_SEQ_DESC
		,	B.ORDERCOUNT
		,	datediff(day,
                lag(A.WEEKENDING) over (partition by A.CUSTNUMBER, A.SKU order by A.WEEKENDING),
                A.WEEKENDING
               ) /7 as diff

INTO #ORDERPATTERNDATA2017
FROM #WEEKLYSALES2017 A
JOIN #ORDERCOUNT2017 B ON A.UNIQUEID = B.UNIQUEID
ORDER BY 1, 8
-- SELECT * FROM #ORDERPATTERNDATA ORDER BY UNIQUEID, WEEKENDING
-- SELECT COUNT (DISTINCT UNIQUEID) FROM #ORDERPATTERNDATA WHERE ORDERCOUNT = 3

--------------------------------------------------------------------------------------------------------------------
DROP TABLE #AVGORDERS2017
SELECT		DISTINCT UNIQUEID
		,	AVG (DIFF) AVE
		,	SUM(QTY) QTY 

INTO #AVGORDERS2017
FROM #ORDERPATTERNDATA2017 A
WHERE ORDERCOUNT > 3
AND ORDER_SEQ_ASC > 1
GROUP BY UNIQUEID
ORDER BY 2 DESC
-- select top 10 * from #AVGORDERS

DROP TABLE #ORDERDATA2017
SELECT		DISTINCT UNIQUEID
		,	CUSTNUMBER
		,	CUSTOMERNAME
		,	SKU
		,	WEEKENDING
		,	ORDERCOUNT
INTO #ORDERDATA2017
FROM #ORDERPATTERNDATA2017 A
WHERE ORDERCOUNT > 3
AND ORDER_SEQ_DESC = 1
GROUP BY UNIQUEID,CUSTNUMBER, CUSTOMERNAME, SKU, WEEKENDING, ORDERCOUNT
ORDER BY UNIQUEID, WEEKENDING

--------------------------------------------------------------------------------------------------------------------

--DROP TABLE SANDBOX.DBO.tblORDERFORECAST
DROP TABLE #2017ORDER
SELECT		A.UNIQUEID
		,	B.CUSTNUMBER
		,	B.CUSTOMERNAME
		,	B.SKU
		,	C.NEW_SKUSHORTNAME
		,	B.WEEKENDING
		,	B.ORDERCOUNT
		,	A.AVE			AVE_ORDER_WKS
		,	QTY	TOTAL_SALES
		,	CAST (CONVERT(CHAR(11), DATEADD (WK,AVE,B.WEEKENDING)-5,111) AS DATE) NEXT_ORDER_WEEK
INTO #2017ORDER
FROM #AVGORDERS2017 A
JOIN #ORDERDATA2017 B ON A.UNIQUEID = B.UNIQUEID
JOIN Integration.dbo.[CRMSKU] C ON B.SKU = C.NEW_SKUNUMBER
WHERE A.AVE <10
ORDER BY 7 DESC,1
-- SELECT TOP 10 * FROM #2017ORDER
--------------------------------------
--             2018 Data            --
--------------------------------------


DROP TABLE #WEEKLYSALES2018
SELECT		B.CUSTNUMBER + A.SKU UNIQUEID
		,	B.CUSTNUMBER
		,	A.CUSTOMERNAME
		,	A.SKU 
		,	SUM(A.QTY) QTY
		,	DATEPART( WK, A.ORDERDATE) 'Week of the Year'
		,	CONVERT(VARCHAR(10), DATEADD(dd, 7-(DATEPART(dw, A.ORDERDATE)), A.ORDERDATE) ,111) 'WEEKENDING'
INTO #WEEKLYSALES2018
FROM Integration.dbo.LineSalesV A
JOIN #SALESTEMP B ON A.ORDERID = B.SALESID
WHERE A.REGION = 'NA'
AND A.ORDERDATE > '2017-12-31'
GROUP BY A.SKU, A.CUSTOMERNAME, B.CUSTNUMBER, DATEPART( WK, A.ORDERDATE),
CONVERT(VARCHAR(10), DATEADD(dd, -(DATEPART(dw, A.ORDERDATE)-1), A.ORDERDATE) ,111),
CONVERT(VARCHAR(10), DATEADD(dd, 7-(DATEPART(dw, A.ORDERDATE)), A.ORDERDATE) ,111)
ORDER BY 5
-- select top 10 * from #WEEKLYSALES2018


DROP TABLE #ORDERCOUNT2018
SELECT DISTINCT UNIQUEID, COUNT (UNIQUEID) ORDERCOUNT INTO #ORDERCOUNT2018 FROM #WEEKLYSALES2018 GROUP BY UNIQUEID
-- SELECT * FROM #ORDERCOUNT

--------------------------------------------------------------------------------------------------------------------

DROP TABLE #ORDERPATTERNDATA2018
SELECT		A.*
		,	ROW_NUMBER () OVER (PARTITION BY A.CUSTNUMBER, A.SKU ORDER BY A.WEEKENDING ASC) ORDER_SEQ_ASC
		,	ROW_NUMBER () OVER (PARTITION BY A.CUSTNUMBER, A.SKU ORDER BY A.WEEKENDING DESC) ORDER_SEQ_DESC
		,	B.ORDERCOUNT
		,	datediff(day,
                lag(A.WEEKENDING) over (partition by A.CUSTNUMBER, A.SKU order by A.WEEKENDING),
                A.WEEKENDING
               ) /7 as diff

INTO #ORDERPATTERNDATA2018
FROM #WEEKLYSALES2018 A
JOIN #ORDERCOUNT2018 B ON A.UNIQUEID = B.UNIQUEID
ORDER BY 1, 8
-- select top 10 * from #ORDERPATTERNDATA2018

DROP TABLE #AVGORDERS2018
SELECT		DISTINCT UNIQUEID
		,	AVG (DIFF) AVE
		,	SUM(QTY) QTY 

INTO #AVGORDERS2018
FROM #ORDERPATTERNDATA2018 A
WHERE ORDERCOUNT > 3
AND ORDER_SEQ_ASC > 1
GROUP BY UNIQUEID
ORDER BY 2 DESC
-- select top 10 * from #AVGORDERS

DROP TABLE #ORDERDATA2018
SELECT		DISTINCT UNIQUEID
		,	CUSTNUMBER
		,	CUSTOMERNAME
		,	SKU
		,	WEEKENDING
		,	ORDERCOUNT
INTO #ORDERDATA2018
FROM #ORDERPATTERNDATA2018 A
WHERE ORDERCOUNT > 3
AND ORDER_SEQ_ASC = 1
GROUP BY UNIQUEID,CUSTNUMBER, CUSTOMERNAME, SKU, WEEKENDING, ORDERCOUNT
ORDER BY UNIQUEID, WEEKENDING

--------------------------------------------------------------------------------------------------------------------

--DROP TABLE SANDBOX.DBO.tblORDERFORECAST
DROP TABLE #2018ORDER
SELECT		A.UNIQUEID
		,	B.CUSTNUMBER
		,	B.CUSTOMERNAME
		,	B.SKU
		,	C.NEW_SKUSHORTNAME
		,	B.WEEKENDING
		,	B.ORDERCOUNT
		,	A.AVE			AVE_ORDER_WKS
		,	QTY	TOTAL_SALES
		,	CAST (CONVERT(CHAR(11), DATEADD (WK,AVE,B.WEEKENDING)-5,111) AS DATE) NEXT_ORDER_WEEK
INTO #2018ORDER
FROM #AVGORDERS2018 A
JOIN #ORDERDATA2018 B ON A.UNIQUEID = B.UNIQUEID
JOIN Integration.dbo.[CRMSKU] C ON B.SKU = C.NEW_SKUNUMBER
ORDER BY 7 DESC,1

--------------------------------------
--    Combine 2017 & 2018 Data      --
--------------------------------------
-- SELECT * FROM #ORDERPATTERNDATA2018
-- SELECT * FROM #2017ORDER

SELECT		--A.*
			A.UNIQUEID
		,	A.CUSTNUMBER
		,	A.CUSTOMERNAME
		,	A.SKU
		,	A.QTY
		,	A.WEEKENDING		'FIRST_2018_ORDER'
		--,	A.ORDER_SEQ_ASC
		,	B.ORDERCOUNT
		,	B.AVE_ORDER_WKS
		,	B.NEXT_ORDER_WEEK as 'Next_Order_FCST_2018'

FROM #ORDERPATTERNDATA2018 A
JOIN #2017ORDER B ON A.UNIQUEID = B.UNIQUEID
WHERE ORDER_SEQ_asc = 1
ORDER BY A.CUSTNUMBER, A.SKU, A.ORDER_SEQ_ASC